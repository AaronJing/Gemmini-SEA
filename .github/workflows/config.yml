name: Gemmini CI
on: [push]
jobs:
  install-gemmini:
    name: gemmini-install
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:3f9150
      options: --entrypoint /bin/bash
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: get paths
        run: .github/scripts/defaults.sh
        id: get-paths

      - name: install gemmini
        run: .github/scripts/install-gemmini.sh

      - name: cache gemmini install
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.get-paths.outputs.LOCAL_CHIPYARD_DIR }}
            ${{ steps.get-paths.outputs.LOCAL_CONDA }}
          key: gemmini-install-${{ github.ref }}-${{ github.sha }}

  build-gemmini-config:
    name: build-gemmini-config
    runs-on: self-hosted
    needs: install-gemmini
    container:
      image: ucbbar/chipyard-ci-image:3f9150
      options: --entrypoint /bin/bash
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: get paths
        run: .github/scripts/defaults.sh
        id: get-paths

      - name: remove chipyard
        run: .github/scripts/remove-chipyard.sh

      - name: restore cache gemmini install
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.get-paths.outputs.LOCAL_CHIPYARD_DIR }}
            ${{ steps.get-paths.outputs.LOCAL_CONDA }}
          key: gemmini-install-${{ github.ref }}-${{ github.sha }}

      - name: Building Gemmini Config using Verilator
        run: .github/scripts/do-rtl-build.sh

      - name: cache build-gemmini-config install
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.get-paths.outputs.LOCAL_CHIPYARD_DIR }}
            ${{ steps.get-paths.outputs.LOCAL_CONDA }}
          key: build-gemmini-config-${{ github.ref }}-${{ github.sha }}

  spike-run-tests:
    name: spike-run-tests
    runs-on: ubuntu-latest
    needs: install-gemmini
    container:
      image: ucbbar/chipyard-ci-image:3f9150
      options: --entrypoint /bin/bash
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: get paths
        run: .github/scripts/defaults.sh
        id: get-paths

      - name: remove chipyard
        run: .github/scripts/remove-chipyard.sh

      - name: restore cache gemmini install
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.get-paths.outputs.LOCAL_CHIPYARD_DIR }}
            ${{ steps.get-paths.outputs.LOCAL_CONDA }}
          key: gemmini-install-${{ github.ref }}-${{ github.sha }}

      - name: run-tests
        run: .github/scripts/run-tests-spike.sh

  rtl-run-tests:
    name: rtl-run-tests
    runs-on: ubuntu-latest
    needs: build-gemmini-config
    container:
      image: ucbbar/chipyard-ci-image:3f9150
      options: --entrypoint /bin/bash
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: get paths
        run: .github/scripts/defaults.sh
        id: get-paths

      - name: remove chipyard
        run: .github/scripts/remove-chipyard.sh

      - name: restore cache build-gemmini-config install
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.get-paths.outputs.LOCAL_CHIPYARD_DIR }}
            ${{ steps.get-paths.outputs.LOCAL_CONDA }}
          key: build-gemmini-config-${{ github.ref }}-${{ github.sha }}

      - name: run-tests
        run: .github/scripts/run-tests-rtl.sh
